

const uint8_t fonts [255][8] =
{
		{0x10, 0x18, 0x1c, 0x1e, 0x1c, 0x18, 0x10, 0x00},//cursor
		{0x00, 0x08, 0x1e, 0x09, 0x01, 0x0e, 0x00, 0x00},//back
		{0x00, 0x01, 0x09, 0x1f, 0x08, 0x00, 0x00, 0x00},//enter
		{0x07, 0x06, 0x0C, 0x0e, 0x06, 0x04, 0x08, 0x10},//flash
		{0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0},

		{0, 4, 2, 31, 2, 4, 0, 0}, //	right arrow
		{0, 4, 8, 31, 8, 4, 0, 0}, //	left arrow
		{1, 2, 31, 4, 31, 8, 16, 0}, //	not equal
		{2, 4, 8, 4, 2, 0, 31, 0}, //	less than or equal to
		{8, 4, 2, 4, 8, 0, 31, 0}, //	greater than or equal to
		{1, 1, 5, 9, 31, 8, 4, 0}, //	enter
		{4, 14, 21, 4, 4, 4, 4, 0}, //	up arrow
		{4, 4, 4, 4, 21, 14, 4, 0}, //	down arrow
		{0, 0, 0, 0, 0, 0, 0, 0}, // SPACE
		{4, 4, 4, 4, 0, 0, 4, 0},	//!
		{10, 10, 10, 0, 0, 0, 0, 0}, //	"
		{10, 10, 31, 10, 31, 10, 10, 0}, //	#
		{4, 15, 20, 14, 5, 30, 4, 0}, //$
		{24, 25, 2, 4, 8, 19, 3, 0}, //	%
		{12, 18, 20, 8, 21, 18, 13, 0}, //	&
		{12, 4, 8, 0, 0, 0, 0, 0}, // 	'
		{2, 4, 8, 8, 8, 4, 2, 0}, //	(
		{8, 4, 2, 2, 2, 4, 8, 0}, //	)
		{0, 4, 21, 14, 21, 4, 0, 0}, //	*
		{0, 4, 4, 31, 4, 4, 0, 0}, //	+
		{0, 0, 0, 0, 12, 4, 8, 0}, //	,
		{0, 0, 0, 31, 0, 0, 0, 0}, //	-
		{0, 0, 0, 0, 0, 12, 12, 0}, //	.
		{0, 1, 2, 4, 8, 16, 0, 0}, //	/
		{14, 17, 19, 21, 25, 17, 14, 0}, // 0
		{4,  12, 4,  4,  4,  4,  14, 0}, // 1
		{14, 17, 1,  2,  4,  8,  31, 0}, // 2
		{15, 2,  4,  2,  1,  17, 14, 0}, // 3
		{2,  6,  10, 31, 2,  2,  2,  0}, // 4
		{31, 16, 30, 1,  1,  17, 14, 0}, // 5
		{2,  4,  14, 17, 17, 17, 14, 0}, // 6
		{31, 1,  2,  4,  8,  8,  8,  0}, // 7
		{14, 17, 17, 14, 17, 17, 14, 0}, // 8
		{14, 17, 17, 17, 14, 4,  8,  0}, // 9
		{0, 0, 12, 12, 0, 12, 12, 0}, //	:
		{0, 12, 12, 0, 12, 4, 8, 0}, //	;
		{2, 4, 8, 16, 8, 4, 2, 0}, //	<
		{0, 0, 31, 0, 31, 0, 0, 0}, //	=
		{8, 4, 2, 1, 2, 4, 8, 0}, //	>
		{14, 17, 1, 2, 4, 0, 4, 0}, //	?
		{14, 17, 1, 13, 21, 21, 14, 0}, //	@
		{14, 17, 17, 17, 31, 17, 17, 0}, // A
		{30, 17, 17, 30, 17, 17, 30, 0}, // B
		{14, 17, 16, 16, 16, 17, 14, 0}, // C
		{28, 18, 17, 17, 17, 18, 28, 0}, // D
		{31, 16, 16, 30, 16, 16, 31, 0}, // E
		{31, 16, 16, 30, 16, 16, 16, 0}, // F
		{14, 17, 16, 23, 17, 17, 15, 0}, // G
		{17, 17, 17, 31, 17, 17, 17, 0}, // H
		{14, 4, 4, 4, 4, 4, 14, 0}, // I
		{7, 2, 2, 2, 2, 18, 12, 0}, // J
		{17, 18, 20, 24, 20, 18, 17, 0}, // K
		{16, 16, 16, 16, 16, 16, 31, 0}, // L
		{17, 27, 21, 21, 17, 17, 17, 0}, // M
		{17, 17, 25, 21, 19, 17, 17, 0}, // N
		{14, 17, 17, 17, 17, 17, 14, 0}, // O
		{30, 17, 17, 30, 16, 16, 0, 0}, // P
		{14, 17, 17, 17, 21, 18, 13, 0}, // Q
		{30, 17, 17, 30, 20, 18, 17, 0}, // R
		{15, 16, 16, 14, 1, 1, 30, 0}, // S
		{31, 4, 4, 4, 4, 4, 4, 0}, // T
		{17, 17, 17, 17, 17, 17, 14, 0}, // U
		{17, 17, 17, 17, 17, 10, 4, 0}, // V
		{17, 17, 17, 21, 21, 21, 10, 0}, // W
		{17, 17, 10, 4, 10, 17, 17, 0}, // X
		{17, 17, 17, 10, 4, 4, 4, 0}, // Y
		{31, 1, 2, 4, 8, 16, 31, 0}, // Z
		{14, 8, 8, 8, 8, 8, 14, 0}, // [
		{0, 16, 8, 4, 2, 1, 0, 0}, //
		{14, 2, 2, 2, 2, 2, 14, 0}, // ]
		{4, 10, 17, 0, 0, 0, 0, 0}, // ^
		{0, 0, 0, 0, 0, 0, 31, 0}, // _
		{8, 4, 2, 0, 0, 0, 0, 0}, // `
		{0, 0, 14, 1, 15, 17, 15, 0}, // a
		{16, 16, 16, 22, 25, 17, 30, 0}, // b
		{0, 0, 14, 16, 16, 17, 14, 0}, // c
		{1, 1, 1, 13, 19, 17, 14, 0}, // d
		{0, 0, 14, 17, 31, 16, 14, 0}, // e
		{6, 9, 8, 28, 8, 8, 8, 0}, // f
		{0, 15, 17, 17, 15, 1, 14, 0}, // g
		{16, 16, 22, 25, 17, 17, 17, 0}, // h
		{0, 4, 0, 4, 4, 4, 4, 0}, // i
		{2, 0, 6, 2, 2, 18, 12, 0}, // j
		{16, 16, 18, 20, 24, 20, 18, 0}, // k
		{12, 4, 4, 4, 4, 4, 14, 0}, // l
		{0, 0, 26, 21, 21, 17, 17, 0}, // m
		{0, 0, 22, 25, 17, 17, 17, 0}, // n
		{0, 0, 14, 17, 17, 17, 14, 0}, // o
		{0, 0, 30, 17, 30, 16, 16, 0}, // p
		{0, 0, 13, 19, 15, 1, 1, 0}, // q
		{0, 0, 22, 25, 16, 16, 16, 0}, // r
		{0, 0, 14, 16, 14, 1, 30, 0}, // s
		{8, 8, 28, 8, 8, 9, 6, 0}, // t
		{0, 0, 17, 17, 17, 19, 13, 0}, // u
		{0, 0, 17, 17, 17, 10, 4, 0}, // v
		{0, 0, 17, 17, 21, 21, 10, 0}, // w
		{0, 0, 17, 10, 4, 10, 17, 0}, // x
		{0, 0, 17, 17, 15, 1, 14, 0}, // y
		{0, 0, 31, 2, 4, 8, 31, 0}, // z
		{2, 4, 4, 8, 4, 4, 2, 0}, //	{
		{4, 4, 4, 4, 4, 4, 4, 0}, //	|
		{8, 4, 4, 2, 4, 4, 8, 0}, //
		{0, 0, 8, 21, 21, 2, 0, 0}, //	~
};

const uint8_t bandhayudha_logo[] =
{
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0x80, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x81, 0xc0, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xe0, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x70, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x38, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x1c, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x0e, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x1c, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x38, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x70, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0xe0, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xc0, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0x80, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0x80, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xc0, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0xe0, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x70, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x38, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x1c, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x0e, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x07, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x03, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x01, 0xc0, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x70, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x38, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x1c, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x0e, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x07, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
